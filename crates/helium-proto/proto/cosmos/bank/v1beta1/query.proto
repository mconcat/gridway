syntax = "proto3";
package cosmos.bank.v1beta1;

import "cosmos/base/query/v1beta1/pagination.proto";
import "cosmos/bank/v1beta1/bank.proto";

option go_package = "github.com/cosmos/cosmos-sdk/x/bank/types";

// Query defines the gRPC querier service for bank module
service Query {
  // Balance queries the balance of a single coin for a single account
  rpc Balance(QueryBalanceRequest) returns (QueryBalanceResponse) {}
  
  // AllBalances queries the balance of all coins for a single account
  rpc AllBalances(QueryAllBalancesRequest) returns (QueryAllBalancesResponse) {}
  
  // TotalSupply queries the total supply of all coins
  rpc TotalSupply(QueryTotalSupplyRequest) returns (QueryTotalSupplyResponse) {}
  
  // SupplyOf queries the supply of a single coin
  rpc SupplyOf(QuerySupplyOfRequest) returns (QuerySupplyOfResponse) {}
  
  // Params queries the parameters of the bank module
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {}
  
  // DenomMetadata queries the client metadata of a given coin denomination
  rpc DenomMetadata(QueryDenomMetadataRequest) returns (QueryDenomMetadataResponse) {}
  
  // DenomsMetadata queries the client metadata for all registered coin denominations
  rpc DenomsMetadata(QueryDenomsMetadataRequest) returns (QueryDenomsMetadataResponse) {}
}

// QueryBalanceRequest is the request type for the Query/Balance RPC method
message QueryBalanceRequest {
  // address is the address to query balances for
  string address = 1;
  
  // denom is the coin denom to query balances for
  string denom = 2;
}

// QueryBalanceResponse is the response type for the Query/Balance RPC method
message QueryBalanceResponse {
  // balance is the balance of the coin
  Coin balance = 1;
}

// QueryAllBalancesRequest is the request type for the Query/AllBalances RPC method
message QueryAllBalancesRequest {
  // address is the address to query balances for
  string address = 1;
  
  // pagination defines an optional pagination for the request
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// QueryAllBalancesResponse is the response type for the Query/AllBalances RPC method
message QueryAllBalancesResponse {
  // balances is the balances of all the coins
  repeated Coin balances = 1;
  
  // pagination defines the pagination in the response
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryTotalSupplyRequest is the request type for the Query/TotalSupply RPC method
message QueryTotalSupplyRequest {
  // pagination defines an optional pagination for the request
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryTotalSupplyResponse is the response type for the Query/TotalSupply RPC method
message QueryTotalSupplyResponse {
  // supply is the supply of the coins
  repeated Coin supply = 1;
  
  // pagination defines the pagination in the response
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QuerySupplyOfRequest is the request type for the Query/SupplyOf RPC method
message QuerySupplyOfRequest {
  // denom is the coin denom to query balances for
  string denom = 1;
}

// QuerySupplyOfResponse is the response type for the Query/SupplyOf RPC method
message QuerySupplyOfResponse {
  // amount is the supply of the coin
  Coin amount = 1;
}

// QueryParamsRequest defines the request type for querying bank parameters
message QueryParamsRequest {}

// QueryParamsResponse defines the response type for querying bank parameters
message QueryParamsResponse {
  Params params = 1;
}

// QueryDenomMetadataRequest is the request type for the Query/DenomMetadata RPC method
message QueryDenomMetadataRequest {
  // denom is the coin denom to query metadata for
  string denom = 1;
}

// QueryDenomMetadataResponse is the response type for the Query/DenomMetadata RPC method
message QueryDenomMetadataResponse {
  // metadata describes the given coin denomination
  Metadata metadata = 1;
}

// QueryDenomsMetadataRequest is the request type for the Query/DenomsMetadata RPC method
message QueryDenomsMetadataRequest {
  // pagination defines an optional pagination for the request
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryDenomsMetadataResponse is the response type for the Query/DenomsMetadata RPC method
message QueryDenomsMetadataResponse {
  // metadata provides the client metadata for all registered coin denominations
  repeated Metadata metadatas = 1;
  
  // pagination defines the pagination in the response
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}