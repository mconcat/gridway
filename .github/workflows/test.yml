name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y librocksdb-dev protobuf-compiler libssl-dev pkg-config
    
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-registry-
    
    - name: Cache target directory
      uses: actions/cache@v4
      with:
        path: target
        key: ${{ runner.os }}-target-test-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-target-test-
    
    - name: Install cargo-component
      run: |
        if ! command -v cargo-component &> /dev/null; then
          cargo install cargo-component --locked
        fi
    
    - name: Add wasm32-wasip1 target
      run: rustup target add wasm32-wasip1
    
    - name: Build WASI modules
      run: ./scripts/build-wasi-modules.sh
    
    - name: Run tests
      run: cargo test --workspace --exclude ante-handler --exclude begin-blocker --exclude end-blocker --exclude tx-decoder
    
    - name: Run tests with verbose output
      if: failure()
      run: cargo test --all -- --nocapture